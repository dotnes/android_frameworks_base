/*
 * Copyright (C) 2010 The Android Open Source Project
 * This code has been modified. Portions copyright (C) 2012, ParanoidAndroid Project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.systemui.statusbar.halo;

import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.graphics.drawable.Drawable;
import android.graphics.PixelFormat;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.TextView;

import com.android.systemui.R;

public class Halo extends FrameLayout {

	private int id;
    private String appName;

    private Context mContext;
	private LayoutInflater mLayoutInflater;
    private View viewRoot;
    private ImageButton mIcon;
    private TextView mTicker;
    private PackageManager mPm ;
    private Handler mHandler;

    public static final String TAG = "HaloLauncher";
    private static final DEBUG = true;
    private static final int TICKER_HIDE_TIME = 2000;

	public boolean mExpanded = false;
    public boolean mTickerShowing = false;

    public Halo(Context context, String app) {
		super(context);
        mContext = context;
        appName = app;

		mLayoutInflater = LayoutInflater.from(mContext);
        mPm = mContext.getPackageManager();
        viewRoot = mLayoutInflater.inflate(R.layout.halo_layout, null);

        // App icon
		mIcon = (ImageButton) viewRoot.findViewById(R.id.app_icon);
        mTicker = (TextView) viewRoot.findViewById(R.id.ticker);
        id = android.os.Process.getUidForName(appName);

        mTicker.setVisibility(View.GONE);
		mIcon.setImageDrawable(getIconFromPackageName(appName));
		mIcon.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
                if (DEBUG) Log.d(TAG,"Click recived");
				show(mExpanded);
			}
		});
        if (DEBUG) Log.d(TAG,"i am Alive");
    }

    public void show(boolean expanded){
        if(expanded) {
        //TODO: pause the activity
        } else {
          Intent appStartIntent = mPm.getLaunchIntentForPackage(appName);
          if (appStartIntent != null) {
                appStartIntent.addFlags(Intent.FLAG_MULTI_WINDOW);
                mContext.startActivity(appStartIntent);
            }
        }
    }

    private Drawable getIconFromPackageName(final String packageName) {
        try {
            Drawable icon = mPm.getApplicationIcon(packageName);
            if (DEBUG) Log.d(TAG,"I have an Icon");
            return icon;
        } catch (NameNotFoundException e) {
                //Who am I
        }
        return null;
    }

    private void moveToTop(){
        //TODO: Move the imageView to the top of the screen
    }

    public WindowManager.LayoutParams getWMParams() {
        WindowManager.LayoutParams lp = new WindowManager.LayoutParams(
                WindowManager.LayoutParams.MATCH_PARENT,
             // WindowManager.LayoutParams.WRAP_CONTENT,
                WindowManager.LayoutParams.WRAP_CONTENT,
             // WindowManager.LayoutParams.MATCH_PARENT,
                WindowManager.LayoutParams.TYPE_SYSTEM_ALERT,
                WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
                        | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
                        | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH,
                PixelFormat.TRANSLUCENT);
        return lp;
    }

    public void setTicker(String notif) {
        mTickerShowing = true;
        mTicker.setVisibility(View.VISIBLE);
        mTicker.setText(notif);
        mHandler.postDelayed(TickerHider, TICKER_HIDE_TIME);
    }

    private Runnable TickerHider = new Runnable() {
        public void run() {
            if (mTickerShowing) {
                mTicker.setVisibility(View.INVISIBLE);
                mTickerShowing = false;
            }
        }
    };

}
